// <auto-generated />
using System;
using AgendaApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendaApp.Migrations
{
    [DbContext(typeof(AgendaContext))]
    [Migration("20250214233055_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Lib.Classes.Entities.Agenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CategoriaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Dia")
                        .HasColumnType("DATE");

                    b.Property<Guid>("IntervaloId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("Dia")
                        .HasDatabaseName("IX_Agenda_Dia");

                    b.HasIndex("IntervaloId")
                        .IsUnique();

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("Lib.Classes.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Lib.Classes.Entities.Intervalo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comeco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IndexAula")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IndexAula")
                        .IsUnique()
                        .HasDatabaseName("IX_Intervalo_IndexAula");

                    b.ToTable("Intervalos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("48353c00-1b14-490c-86c6-d954c58877e7"),
                            Comeco = "08:05",
                            IndexAula = 0,
                            Label = "1º Aula"
                        },
                        new
                        {
                            Id = new Guid("5fd6654a-41d1-4e7e-91e0-b9db388c533b"),
                            Comeco = "08:55",
                            IndexAula = 1,
                            Label = "2º Aula"
                        },
                        new
                        {
                            Id = new Guid("319e5fae-20c9-4166-8009-329a9a5dd4d1"),
                            Comeco = "10:00",
                            IndexAula = 2,
                            Label = "3º Aula"
                        },
                        new
                        {
                            Id = new Guid("9f23cf25-2183-4a7e-8e83-6a5e46cdb847"),
                            Comeco = "10:5",
                            IndexAula = 3,
                            Label = "4º Aula"
                        },
                        new
                        {
                            Id = new Guid("ddeb3124-a603-4c58-9a96-3f743ea89d6b"),
                            Comeco = "13:05",
                            IndexAula = 4,
                            Label = "1º Aula"
                        },
                        new
                        {
                            Id = new Guid("d9ec58f2-9a57-4c35-8695-b47693477b4a"),
                            Comeco = "13:55",
                            IndexAula = 5,
                            Label = "2º Aula"
                        },
                        new
                        {
                            Id = new Guid("47afdfbd-b19b-4f64-a491-b12d4a5b6864"),
                            Comeco = "14:45",
                            IndexAula = 6,
                            Label = "3º Aula"
                        },
                        new
                        {
                            Id = new Guid("8176df7d-e82f-4f60-b2e6-e57f363e3d53"),
                            Comeco = "15:50",
                            IndexAula = 7,
                            Label = "4º Aula"
                        },
                        new
                        {
                            Id = new Guid("c6c1f321-b3d0-4a65-bc2f-191205f722f2"),
                            Comeco = "16:40",
                            IndexAula = 8,
                            Label = "5º Aula"
                        },
                        new
                        {
                            Id = new Guid("6e503222-a32a-4903-9007-af8ecbab563f"),
                            Comeco = "19:00",
                            IndexAula = 9,
                            Label = "1º Aula"
                        },
                        new
                        {
                            Id = new Guid("fca35fc6-a9c3-4d89-a7a9-81c5058e3198"),
                            Comeco = "19:50",
                            IndexAula = 10,
                            Label = "2º Aula"
                        },
                        new
                        {
                            Id = new Guid("bf837f59-0779-48d9-b5ca-268061248ebb"),
                            Comeco = "22:55",
                            IndexAula = 11,
                            Label = "3º Aula"
                        },
                        new
                        {
                            Id = new Guid("d5aa0deb-ac8f-4c41-9b65-1980ef5c60f4"),
                            Comeco = "21:45",
                            IndexAula = 12,
                            Label = "4º Aula"
                        });
                });

            modelBuilder.Entity("Lib.Classes.Entities.Agenda", b =>
                {
                    b.HasOne("Lib.Classes.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Lib.Classes.Entities.Intervalo", "Intervalo")
                        .WithOne()
                        .HasForeignKey("Lib.Classes.Entities.Agenda", "IntervaloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Intervalo");
                });
#pragma warning restore 612, 618
        }
    }
}
